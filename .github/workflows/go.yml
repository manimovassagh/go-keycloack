name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      keycloak:
        image: quay.io/keycloak/keycloak:latest
        ports:
          - 8080:8080
        env:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Wait for Keycloak to be ready
      run: |
        echo "Waiting for Keycloak to start..."
        for i in {1..30}; do
          if curl -s http://localhost:8080/auth > /dev/null; then
            echo "Keycloak is up and running!"
            break
          else
            echo "Waiting for Keycloak..."
            sleep 10
          fi
        done
        if ! curl -s http://localhost:8080/auth > /dev/null; then
          echo "Keycloak failed to start within the expected time."
          exit 1
        fi

    - name: Set up Keycloak
      run: |
        curl -s -X POST "http://localhost:8080/auth/realms/master/protocol/openid-connect/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "username=admin" \
          -d "password=admin" \
          -d "grant_type=password" \
          -d "client_id=admin-cli" > token.json
        export TOKEN=$(jq -r '.access_token' token.json)
        curl -s -X POST "http://localhost:8080/auth/admin/realms" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $TOKEN" \
          -d @realm.json

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v ./...

    - name: Run linters
      run: |
        go install golang.org/x/lint/golint@latest
        golint ./...
